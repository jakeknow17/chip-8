const canvas = document.getElementById("canvas");
const fileInput = document.getElementById("file");
const startBtn = document.getElementById("startBtn");
const pauseBtn = document.getElementById("pauseBtn");
const continueBtn = document.getElementById("continueBtn");
const resetBtn = document.getElementById("resetBtn");
const speedSlider = document.getElementById("speed");
const frequencySlider = document.getElementById("frequency");
const volumeSlider = document.getElementById("volume");

const emu = new Chip8.WebEmulator(canvas);

let rom = new Uint8Array([0x00, 0xFF, 0x00, 0xC2, 0xA2, 0x1A, 0xF2, 0x1E, 0xF1, 0x65, 0xA2, 0x16, 0xD0, 0x32, 0xA2, 0x18, 0xD1, 0x32, 0x72, 0x02, 0x12, 0x02, 0x0F, 0x0F, 0xFF, 0xFF, 0x38, 0x48, 0x39, 0x47, 0x3B, 0x47, 0x3D, 0x47, 0x3F, 0x47, 0x41, 0x47, 0x43, 0x47, 0x44, 0x47, 0x46, 0x46, 0x48, 0x46, 0x49, 0x46, 0x4B, 0x45, 0x4D, 0x45, 0x4E, 0x44, 0x50, 0x44, 0x51, 0x43, 0x52, 0x43, 0x54, 0x42, 0x55, 0x42, 0x56, 0x41, 0x57, 0x40, 0x58, 0x40, 0x59, 0x3F, 0x5A, 0x3E, 0x5B, 0x3E, 0x5B, 0x3D, 0x5C, 0x3C, 0x5C, 0x3B, 0x5D, 0x3B, 0x5D, 0x3A, 0x5D, 0x39, 0x5D, 0x38, 0x5E, 0x38, 0x5D, 0x37, 0x5D, 0x36, 0x5D, 0x35, 0x5D, 0x34, 0x5C, 0x34, 0x5C, 0x33, 0x5B, 0x32, 0x5B, 0x31, 0x5A, 0x31, 0x59, 0x30, 0x58, 0x2F, 0x57, 0x2F, 0x56, 0x2E, 0x55, 0x2D, 0x54, 0x2D, 0x52, 0x2C, 0x51, 0x2C, 0x50, 0x2B, 0x4E, 0x2B, 0x4D, 0x2A, 0x4B, 0x2A, 0x49, 0x29, 0x48, 0x29, 0x46, 0x29, 0x44, 0x28, 0x43, 0x28, 0x41, 0x28, 0x3F, 0x28, 0x3D, 0x28, 0x3B, 0x28, 0x39, 0x28, 0x38, 0x28, 0x36, 0x28, 0x34, 0x28, 0x32, 0x28, 0x30, 0x28, 0x2E, 0x28, 0x2C, 0x28, 0x2B, 0x28, 0x29, 0x29, 0x27, 0x29, 0x26, 0x29, 0x24, 0x2A, 0x22, 0x2A, 0x21, 0x2B, 0x1F, 0x2B, 0x1E, 0x2C, 0x1D, 0x2C, 0x1B, 0x2D, 0x1A, 0x2D, 0x19, 0x2E, 0x18, 0x2F, 0x17, 0x2F, 0x16, 0x30, 0x15, 0x31, 0x14, 0x31, 0x14, 0x32, 0x13, 0x33, 0x13, 0x34, 0x12, 0x34, 0x12, 0x35, 0x12, 0x36, 0x12, 0x37, 0x12, 0x38, 0x12, 0x38, 0x12, 0x39, 0x12, 0x3A, 0x12, 0x3B, 0x13, 0x3B, 0x13, 0x3C, 0x14, 0x3D, 0x14, 0x3E, 0x15, 0x3E, 0x16, 0x3F, 0x17, 0x40, 0x18, 0x40, 0x19, 0x41, 0x1A, 0x42, 0x1B, 0x42, 0x1D, 0x43, 0x1E, 0x43, 0x1F, 0x44, 0x21, 0x44, 0x22, 0x45, 0x24, 0x45, 0x26, 0x46, 0x27, 0x46, 0x29, 0x46, 0x2B, 0x47, 0x2C, 0x47, 0x2E, 0x47, 0x30, 0x47, 0x32, 0x47, 0x34, 0x47, 0x36, 0x47]);
rom = [0x12,0xC6,0xFF,0x07,0x3F,0x00,0x12,0x02,0x6F,0x02,0xFF,0x15,0x00,0xEE,0xA3,0x69,0x60,0x58,0x61,0x08,0xD0,0x10,0x70,0x10,0x30,0xA8,0x12,0x14,0x00,0xEE,0xA3,0x49,0x4D,0x03,0xA3,0x29,0x68,0x00,0xDA,0xB0,0x88,0xF1,0xA2,0xE9,0x4C,0x01,0xA3,0x09,0x60,0x10,0x80,0xB7,0xDA,0x00,0x88,0xF1,0x00,0xEE,0xE0,0xA1,0x00,0xEE,0x69,0x00,0x00,0xEE,0x60,0x06,0x39,0x00,0x12,0x3A,0xE0,0x9E,0x00,0xEE,0x69,0x01,0x60,0xFF,0x8D,0x03,0x7D,0x01,0x00,0xEE,0x7B,0xFF,0x60,0x3F,0x80,0xB2,0x40,0x00,0x77,0x01,0x00,0xEE,0x60,0x01,0x8C,0x03,0x22,0x56,0xC0,0x01,0x40,0x01,0x22,0x56,0x8A,0xD4,0x22,0x42,0x00,0xEE,0x60,0x38,0x61,0x12,0xA3,0x89,0xD0,0x10,0x6F,0x06,0xEF,0x9E,0x12,0x7E,0xD0,0x10,0x00,0xEE,0x6F,0x10,0xFF,0x18,0xFF,0x15,0x22,0x1E,0x00,0xFC,0x22,0x1E,0x22,0x1E,0x00,0xFB,0x22,0x1E,0x22,0x1E,0x00,0xFB,0x22,0x1E,0x22,0x1E,0x00,0xFC,0x22,0x1E,0xFF,0x07,0x3F,0x00,0x12,0x8C,0xA2,0xE6,0xF7,0x33,0xF2,0x65,0xF1,0x30,0x60,0x37,0x61,0x1E,0xD0,0x1A,0xF2,0x30,0x70,0x09,0xD0,0x1A,0x6F,0x06,0xEF,0x9E,0x12,0xC0,0x00,0xE0,0x00,0xFF,0x6A,0x38,0x6B,0x30,0x6D,0x03,0x69,0x00,0x67,0x00,0x22,0x0E,0x22,0x1E,0x22,0x74,0x22,0x1E,0x22,0x62,0x22,0x1E,0x38,0x00,0x12,0x86,0x22,0x02,0x12,0xD8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x02,0x40,0x7A,0x5E,0x89,0x91,0xF0,0x0F,0x01,0x80,0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x80,0x02,0x40,0x0E,0xF0,0x31,0x0C,0x3E,0xFC,0x01,0x80,0x01,0x80,0x00,0x00,0x07,0xC0,0x18,0x30,0x20,0x08,0x23,0xB8,0x44,0x44,0x48,0x8A,0x48,0x02,0x48,0x02,0x34,0x44,0x23,0xB8,0x30,0x08,0x4B,0xF4,0x48,0x14,0x30,0x18,0x11,0x20,0x0F,0xC0,0x03,0xE0,0x0C,0x18,0x10,0x04,0x1D,0xC4,0x22,0x22,0x51,0x12,0x40,0x12,0x40,0x12,0x22,0x2C,0x1D,0xC4,0x10,0x0C,0x2F,0x92,0x28,0x12,0x18,0x0C,0x04,0x88,0x03,0xF0,0xFF,0xFF,0x00,0x00,0xC3,0xC3,0x7E,0x7E,0x3C,0x3C,0x3C,0x3C,0x3C,0x3C,0x7E,0x7E,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFC,0x7F,0xFE,0xFF,0xFF,0xF0,0x0F,0xF0,0x0F,0xF3,0xFF,0xF0,0x7F,0xF0,0x7F,0xF3,0xFF,0xF0,0x0F,0xF0,0x0F,0xFF,0xFF,0x7F,0xFE,0x3F,0xFC,0x00,0xC0,0x00,0x80]
emu.load(rom);

fileInput?.addEventListener("change", event => {
  if (!event.target)
    return;
  const target = event.target;
  const file = target.files?.item(0)
  if (!file) {
    console.log("No file selected")
    return
  }

  const reader = new FileReader()
  reader.onload = event => {
    const result = event.target?.result
    if (result instanceof ArrayBuffer) {
      rom = result
      console.log("Read rom", rom)
    }
  }
  reader.readAsArrayBuffer(file)
})

startBtn?.addEventListener("click", _ => {
  if (!rom) {
    console.error("Rom file must have been loaded")
    return
  }
  emu.load(new Uint8Array(rom))
  emu.start()
})

pauseBtn?.addEventListener("click", _ => {
  emu.pause();
})

continueBtn?.addEventListener("click", _ => {
  emu.continue();
})

resetBtn?.addEventListener("click", _ => {
  emu.reset();
})

speedSlider?.addEventListener("input", event => {
  emu.setEmulationSpeed(event.target.value);
  console.log(event.target.value);
})

frequencySlider?.addEventListener("input", event => {
  emu.setSoundFrequency(event.target.value);
})

volumeSlider?.addEventListener("input", event => {
  emu.setSoundVolume(event.target.value);
})
